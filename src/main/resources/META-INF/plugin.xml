<idea-plugin>
	
	<!-- Plugin metadata -->
	
	<id>com.adacore.Ada-IntelliJ</id>
	<name>Ada support for IntelliJ IDEs</name>
	<vendor email="soufi@adacore.com" url="https://www.adacore.com">AdaCore</vendor>
	
	<description><![CDATA[
		IntelliJ plugin adding Ada support with functionalities ranging from syntax highlighting to building.
	]]></description>
	
	<!-- Change-notes -->
	
	<change-notes><![CDATA[
		<strong>0.3-dev</strong>
		<ul>
			<li>LSP integration</li>
			<li>Ada parser creating PSI trees from Ada source files</li>
			<li>Resolving references (using ALS)</li>
			<li>Finding references (using ALS)</li>
			<li>Completion contributor (using ALS)</li>
		</ul>
		<strong>0.2-dev</strong>
		<ul>
			<li>IDE recognizes GPR (.gpr) files (no syntax highlighting)</li>
			<li>Basic gprbuild support, build configurations with limited customization</li>
			<li>gprbuild output hyperlinks to source code (requires gps_cli to be on PATH)</li>
			<li>Basic GPR file management</li>
		</ul>
		<strong>0.1-dev</strong>
		<ul>
			<li>IDE recognizes Ada body (.adb) and spec (.ads) files</li>
			<li>Basic syntax highlighting for body and spec files</li>
		</ul>
		<strong>0-dev</strong>
	]]></change-notes>
	
	<!-- Dependencies -->
	
	<!-- Allows compatibility with all IntelliJ IDEs -->
	<!-- See https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->
	<depends>com.intellij.modules.lang</depends>
	
	<!-- Application-wide components -->
	
	<application-components>
		
		<!-- GPRbuild manager component -->
		<component>
			<implementation-class>com.adacore.adaintellij.build.GPRbuildManager</implementation-class>
		</component>
		
	</application-components>
	
	<!-- Project-wide components -->
	
	<project-components>
		
		<!-- Ada project component -->
		<component>
			<implementation-class>com.adacore.adaintellij.project.AdaProject</implementation-class>
		</component>
		
		<!-- GPR file manager component -->
		<component>
			<implementation-class>com.adacore.adaintellij.project.GPRFileManager</implementation-class>
		</component>
		<!-- GPRbuild configuration manager component -->
		<component>
			<implementation-class>com.adacore.adaintellij.build.GPRbuildConfigurationManager</implementation-class>
		</component>
		
		<!-- LSP driver component -->
		<component>
			<implementation-class>com.adacore.adaintellij.lsp.AdaLSPDriver</implementation-class>
		</component>
		
	</project-components>
	
	<!-- Platform extensions -->
	
	<extensions defaultExtensionNs="com.intellij">
		
		<!-- Ada global settings -->
		<applicationConfigurable instance="com.adacore.adaintellij.settings.AdaGlobalSettings" groupId="language"/>
		
		<!-- Ada file type factory -->
		<fileTypeFactory implementation="com.adacore.adaintellij.file.AdaFileTypeFactory"/>
		
		<!-- Ada module builder -->
		<moduleBuilder builderClass="com.adacore.adaintellij.project.module.AdaModuleBuilder" id="ADA_MODULE_BUILDER" order="first"/>
		<!-- Ada module type -->
		<moduleType implementationClass="com.adacore.adaintellij.project.module.AdaModuleType" id="ADA_MODULE_TYPE"/>
		
		<!-- Ada syntax highligher factory -->
		<lang.syntaxHighlighterFactory language="Ada" implementationClass="com.adacore.adaintellij.analysis.lexical.AdaSyntaxHighlighterFactory"/>
		<!-- GPR file syntax highligher factory -->
		<lang.syntaxHighlighterFactory language="GPR File" implementationClass="com.adacore.adaintellij.analysis.lexical.GPRFileSyntaxHighlighterFactory"/>
		
		<!-- Ada parser definition -->
		<lang.parserDefinition language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.AdaParserDefinition"/>
		<!-- Ada find-usages provider -->
		<lang.findUsagesProvider language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.usages.AdaFindUsagesProvider"/>
		<!-- Ada find-usages handler factory -->
		<findUsagesHandlerFactory implementation="com.adacore.adaintellij.analysis.semantic.usages.AdaFindUsagesHandlerFactory"/>
		<!-- Ada read/write access detector -->
		<readWriteAccessDetector implementation="com.adacore.adaintellij.analysis.semantic.usages.AdaReadWriteAccessDetector"/>
		<!-- Ada completion contributor -->
		<completion.contributor language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.completion.AdaCompletionContributor"/>
		<!-- Ada structure view factory -->
		<lang.psiStructureViewFactory language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.structure.AdaStructureViewFactory"/>
		<!-- Ada code annotator -->
		<annotator language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.diagnostics.AdaAnnotator"/>
		
		<!-- Ada names validator -->
		<lang.namesValidator language="Ada" implementationClass="com.adacore.adaintellij.analysis.lexical.AdaNamesValidator"/>
		<!-- Ada PSI element rename processor -->
		<renamePsiElementProcessor implementation="com.adacore.adaintellij.analysis.semantic.usages.AdaRenamePsiElementProcessor"/>
		<!-- Ada refactoring support provider -->
		<lang.refactoringSupport language="Ada" implementationClass="com.adacore.adaintellij.analysis.semantic.usages.AdaRefactoringSupportProvider"/>
		
		<!-- Ada code commenter -->
		<lang.commenter language="Ada" implementationClass="com.adacore.adaintellij.misc.AdaCommenter"/>
		
		<!-- GPRbuild run configuration type -->
		<configurationType implementation="com.adacore.adaintellij.build.GPRbuildConfigurationType"/>
		<!-- GPRbuild configuration tool window -->
		<toolWindow id="GPRbuild" anchor="left" secondary="false" factoryClass="com.adacore.adaintellij.build.GPRbuildConfigurationToolWindowFactory"/>
		
	</extensions>
	
	<!-- Plugin actions -->
	
	<actions>
		<group text="Ada">
			<add-to-group group-id="MainMenu" anchor="after" relative-to-action="RefactoringMenu"/>
			<action class="com.adacore.adaintellij.actions.ProjectSettingsAction" text="Project Settings">
				<keyboard-shortcut first-keystroke="control alt A" keymap="$default"/>
			</action>
		</group>
	</actions>
	
</idea-plugin>
